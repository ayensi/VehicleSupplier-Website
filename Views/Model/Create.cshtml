@model OtoGaleri.Data.DataModel.Model

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/_AdminLayout.cshtml";
}

<h2>Create</h2>
<head>
    <style>
        .form-horizontal {
            color: white;
        }
    </style>
</head>
@using (Html.BeginForm("Create", "Model", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Model</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.brand_id, "brand_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("brand_id", Model.BrandList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.brand_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.fueloption_id, "fueloption_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("fueloption_id", Model.FuelOptionList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.fueloption_id, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.motoroption_id, "motoroption_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("motoroption_id", Model.MotorOptionList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.motoroption_id, "", new { @class = "text-danger" })

        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.color_id, "color_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("color_id", Model.ColorList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.color_id, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.gearoption_id, "gearoption_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("gearoption_id", Model.GearOptionList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.gearoption_id, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.model_name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.model_name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.model_name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.model_description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.model_description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.model_description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.model_price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.model_price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.model_price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.model_quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.model_quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.model_quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label lead" for="img">Logo:</label>
        <input onchange="Filevalidation()" required title="Firma logosu yüklemelisiniz." type="file" id="file" name="imageURL" accept="image/*" class=" mb-2 ">
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.model_isUsed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.model_isUsed)
                @Html.ValidationMessageFor(model => model.model_isUsed, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.model_isRentable, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.model_isRentable)
                @Html.ValidationMessageFor(model => model.model_isRentable, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.model_age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.model_age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.model_age, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.model_km, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.model_km, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.model_km, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-light" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>

    Filevalidation = () => {
        const fi = document.getElementById('file');
        // Check if any file is selected.
        if (fi.files.length > 0) {
            for (const i = 0; i <= fi.files.length - 1; i++) {

                const fsize = fi.files.item(i).size;
                const file = Math.round((fsize / 1024));
                // The size of the file.
                if (file >= 1024) {
                    alert(
                        "File too Big, please select a file less than 1mb");
                    $('#file').val('');
                }
                else {
                    document.getElementById('size').innerHTML = '<b>'
                        + file + '</b> KB';
                }
            }
        }
    }

</script>